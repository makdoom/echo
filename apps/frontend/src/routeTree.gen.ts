/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as landingIndexRouteImport } from './routes/(landing)/index'
import { Route as authRegisterIndexRouteImport } from './routes/(auth)/register/index'
import { Route as authLoginIndexRouteImport } from './routes/(auth)/login/index'
import { Route as authEmailVerificationIndexRouteImport } from './routes/(auth)/emailVerification/index'

const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const landingIndexRoute = landingIndexRouteImport.update({
  id: '/(landing)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authRegisterIndexRoute = authRegisterIndexRouteImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginIndexRoute = authLoginIndexRouteImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const authEmailVerificationIndexRoute =
  authEmailVerificationIndexRouteImport.update({
    id: '/(auth)/emailVerification/',
    path: '/emailVerification/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof landingIndexRoute
  '/chat': typeof ChatIndexRoute
  '/emailVerification': typeof authEmailVerificationIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof landingIndexRoute
  '/chat': typeof ChatIndexRoute
  '/emailVerification': typeof authEmailVerificationIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(landing)/': typeof landingIndexRoute
  '/chat/': typeof ChatIndexRoute
  '/(auth)/emailVerification/': typeof authEmailVerificationIndexRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat' | '/emailVerification' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat' | '/emailVerification' | '/login' | '/register'
  id:
    | '__root__'
    | '/(landing)/'
    | '/chat/'
    | '/(auth)/emailVerification/'
    | '/(auth)/login/'
    | '/(auth)/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  landingIndexRoute: typeof landingIndexRoute
  ChatIndexRoute: typeof ChatIndexRoute
  authEmailVerificationIndexRoute: typeof authEmailVerificationIndexRoute
  authLoginIndexRoute: typeof authLoginIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/emailVerification/': {
      id: '/(auth)/emailVerification/'
      path: '/emailVerification'
      fullPath: '/emailVerification'
      preLoaderRoute: typeof authEmailVerificationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  landingIndexRoute: landingIndexRoute,
  ChatIndexRoute: ChatIndexRoute,
  authEmailVerificationIndexRoute: authEmailVerificationIndexRoute,
  authLoginIndexRoute: authLoginIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
